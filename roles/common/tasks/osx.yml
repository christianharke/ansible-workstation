---

#
# Homebrew
#

- name: "[homebrew] Install software"
  include_role:
    name: geerlingguy.homebrew
  vars:
    homebrew_cask_apps:
      - 1password
      - adobe-acrobat-reader
      - boostnote
      - caffeine
      - dockutil
      - firefox
      - forklift
      - google-chrome
      - keepassxc
      - keka
      - libreoffice
      - licecap
      - microsoft-office
      - spectacle
      - tunnelblick
      - vlc
      # QuickLook plugins
      - suspicious-package

#
# MAS
#

- name: "[mas] Install software"
  include_role:
    name: geerlingguy.mas
  vars:
    mas_installed_apps:
      - { id: 410628904, name: Wunderlist }

#
# System
#

- name: "[system] Set hostname 1/2"
  script: scripts/osx/set_hostname.sh "{{ hostname }}"
  when: hostname is defined
  become: true

- name: "[system] Set hostname 2/2"
  osx_defaults:
    domain: /Library/Preferences/SystemConfiguration/com.apple.smb.server
    key: NetBIOSName
    type: string
    value: "{{ hostname }}"
    state: present
  when: hostname is defined
  become: true

- name: "[system] Reveal IP address, hostname, OS version, etc. when clicking the clock in the login window"
  osx_defaults:
    domain: /Library/Preferences/com.apple.loginwindow
    key: LoginwindowText
    type: string
    value: Can't touch this
    state: present
  become: true

- name: "[system] Set login window text"
  osx_defaults:
    domain: /Library/Preferences/com.apple.loginwindow
    key: AdminHostInfo
    type: string
    value: HostName
    state: present
  become: true

- name: "[system] Restart automatically if the computer freezes"
  command: systemsetup -setrestartfreeze on
  become: true

- name: "[system] Require password immediately after sleep or screen saver begins 1/2"
  osx_defaults:
    domain: com.apple.screensaver
    key: askForPassword
    type: int
    value: 1
    state: present

- name: "[system] Require password immediately after sleep or screen saver begins 2/2"
  osx_defaults:
    domain: com.apple.screensaver
    key: askForPasswordDelay
    type: float
    value: 0
    state: present

- name: "[system] Save to disk (not to iCloud) by default"
  osx_defaults:
    domain: NSGlobalDomain
    key: NSDocumentSaveNewDocumentsToCloud
    type: bool
    value: false
    state: present

- name: "[system] Expand save panel by default"
  osx_defaults:
    domain: NSGlobalDomain
    key: NSNavPanelExpandedStateForSaveMode
    type: bool
    value: true
    state: present

- name: "[system] Expand print panel by default"
  osx_defaults:
    domain: NSGlobalDomain
    key: PMPrintingExpandedStateForPrint
    type: bool
    value: true
    state: present

- name: "[system] Automatically quit printer app once the print jobs complete"
  osx_defaults:
    domain: com.apple.print.PrintingPrefs
    key: Quit When Finished
    type: bool
    value: true
    state: present

- name: "[system] Check for software updates daily, not just once per week"
  osx_defaults:
    domain: com.apple.SoftwareUpdate
    key: ScheduleFrequency
    type: int
    value: 1
    state: present

- name: "[system] Install app updates automatically"
  osx_defaults:
    domain: /Library/Preferences/com.apple.commerce
    key: AutoUpdate
    type: bool
    value: true
    state: present
  become: true

- name: "[system] Install OS X updates automatically"
  osx_defaults:
    domain: /Library/Preferences/com.apple.commerce
    key: AutoUpdateRestartRequired
    type: bool
    value: true
    state: present
  become: true

- name: "[system] Update software"
  command: softwareupdate -i -a
  become: true

- name: "Run osx-add-login-items"
  include_role:
    name: osx-add-login-items
  vars:
    login_items:
      - { path: "/Applications/Caffeine.app", hidden: false }
      - { path: "/Applications/Spectacle.app", hidden: false }

#
# Input
#

# enable Tab in modal dialogs - 0 = text boxes and lists, 2/3 = all controls
- name: "[input] Enable full keyboard access for all controls"
  osx_defaults:
    domain: NSGlobalDomain
    key: AppleKeyboardUIMode
    type: int
    value: 3
    state: present

- name: "[input] Disable press-and-hold for keys in favor of key repeat"
  osx_defaults:
    domain: NSGlobalDomain
    key: ApplePressAndHoldEnabled
    type: bool
    value: false
    state: present

- name: "[input] Disable auto-correct"
  osx_defaults:
    domain: NSGlobalDomain
    key: NSAutomaticSpellingCorrectionEnabled
    type: bool
    value: false
    state: present

- name: "[input] Disable smart quotes"
  osx_defaults:
    domain: NSGlobalDomain
    key: NSAutomaticQuoteSubstitutionEnabled
    type: bool
    value: false
    state: present

- name: "[input] Disable smart dashes"
  osx_defaults:
    domain: NSGlobalDomain
    key: NSAutomaticDashSubstitutionEnabled
    type: bool
    value: false
    state: present

- name: "[input] Trackpad - Map bottom right corner to right-click 1/4"
  osx_defaults:
    domain: com.apple.driver.AppleBluetoothMultitouch.trackpad
    key: TrackpadCornerSecondaryClick
    type: int
    value: 2
    state: present

- name: "[input] Trackpad - Map bottom right corner to right-click 2/4"
  osx_defaults:
    domain: com.apple.driver.AppleBluetoothMultitouch.trackpad
    key: TrackpadRightClick
    type: bool
    value: true
    state: present

- name: "[input] Trackpad - Map bottom right corner to right-click 3/4"
  osx_defaults:
    domain: NSGlobalDomain
    host: currentHost
    key: com.apple.trackpad.trackpadCornerClickBehavior
    type: int
    value: 1
    state: present

- name: "[input] Trackpad - Map bottom right corner to right-click 4/4"
  osx_defaults:
    domain: NSGlobalDomain
    host: currentHost
    key: com.apple.trackpad.enableSecondaryClick
    type: bool
    value: true
    state: present

- name: "[input] Trackpad - Enable tap to click for this user 1/4"
  osx_defaults:
    domain: com.apple.AppleMultitouchTrackpad
    key: Clicking
    type: int
    value: 1
    state: present

- name: "[input] Trackpad - Enable tap to click for this user 2/4"
  osx_defaults:
    domain: com.apple.driver.AppleBluetoothMultitouch.trackpad
    key: Clicking
    type: int
    value: 1
    state: present

- name: "[input] Trackpad - Enable tap to click for this user 3/4"
  osx_defaults:
    domain: NSGlobalDomain
    host: currentHost
    key: com.apple.mouse.tapBehavior
    type: int
    value: 1
    state: present

- name: "[input] Trackpad - Enable tap to click for this user 4/4"
  osx_defaults:
    domain: NSGlobalDomain
    key: com.apple.mouse.tapBehavior
    type: int
    value: 1
    state: present

#
# Display
#

- name: "[display] Enable subpixel font rendering on non-Apple LCDs"
  osx_defaults:
    domain: NSGlobalDomain
    key: AppleFontSmoothing
    type: int
    value: 2
    state: present

#
# Sound
#

- name: "[sound] Play feedback when volume is changed"
  osx_defaults:
    domain: NSGlobalDomain
    key: com.apple.sound.beep.feedback
    type: int
    value: 1
    state: present

- name: "[sound] Increase sound quality for Bluetooth headphones/headsets"
  osx_defaults:
    domain: com.apple.BluetoothAudioAgent
    key: Apple Bitpool Min (editable)
    type: int
    value: 40
    state: present

#
# Siri
#

- name: "[siri] Disable Siri"
  osx_defaults:
    domain: com.apple.assistant.support
    key: Assistant Enabled
    type: bool
    value: false
    state: present

#
# Activity Monitor
#

- name: "[activity monitor] Show the main window when launching"
  osx_defaults:
    domain: com.apple.ActivityMonitor
    key: OpenMainWindow
    type: bool
    value: true
    state: present

- name: "[activity monitor] Visualize CPU usage in the Dock icon"
  osx_defaults:
    domain: com.apple.ActivityMonitor
    key: IconType
    type: int
    value: 5
    state: present

- name: "[activity monitor] Show all processes"
  osx_defaults:
    domain: com.apple.ActivityMonitor
    key: ShowCategory
    type: int
    value: 0
    state: present

#
# Finder
#

- name: "[finder] Allow quitting via ⌘ + Q (doing so will also hide desktop icons)"
  osx_defaults:
    domain: com.apple.finder
    key: QuitMenuItem
    type: bool
    value: true
    state: present

# For other paths, use `PfLo` and `file:///full/path/here/`"
- name: "[finder] Set $HOME as the default location for new windows"
  osx_defaults:
    domain: com.apple.finder
    key: NewWindowTarget
    type: string
    value: PfHm
    state: present

- name: "[finder] Show icons for hard drives, servers, and removable media on the desktop 1/4"
  osx_defaults:
    domain: com.apple.finder
    key: ShowExternalHardDrivesOnDesktop
    type: bool
    value: true
    state: present

- name: "[finder] Show icons for hard drives, servers, and removable media on the desktop 2/4"
  osx_defaults:
    domain: com.apple.finder
    key: ShowHardDrivesOnDesktop
    type: bool
    value: true
    state: present

- name: "[finder] Show icons for hard drives, servers, and removable media on the desktop 3/4"
  osx_defaults:
    domain: com.apple.finder
    key: ShowMountedServersOnDesktop
    type: bool
    value: true
    state: present

- name: "[finder] Show icons for hard drives, servers, and removable media on the desktop 4/4"
  osx_defaults:
    domain: com.apple.finder
    key: ShowRemovableMediaOnDesktop
    type: bool
    value: true
    state: present

- name: "[finder] Show hidden files by default"
  osx_defaults:
    domain: com.apple.finder
    key: AppleShowAllFiles
    type: bool
    value: true
    state: present

- name: "[finder] Show all filename extensions"
  osx_defaults:
    domain: NSGlobalDomain
    key: AppleShowAllExtensions
    type: bool
    value: true
    state: present

- name: "[finder] Show status bar"
  osx_defaults:
    domain: com.apple.finder
    key: ShowStatusBar
    type: bool
    value: true
    state: present

- name: "[finder] Show path bar"
  osx_defaults:
    domain: com.apple.finder
    key: ShowPathbar
    type: bool
    value: true
    state: present

- name: "[finder] Allow text selection in Quick Look"
  osx_defaults:
    domain: com.apple.finder
    key: QLEnableTextSelection
    type: bool
    value: true
    state: present

- name: "[finder] When performing a search, search the current folder by default"
  osx_defaults:
    domain: com.apple.finder
    key: FXDefaultSearchScope
    type: string
    value: SCcf
    state: present

- name: "[finder] Disable the warning when changing a file extension"
  osx_defaults:
    domain: com.apple.finder
    key: FXEnableExtensionChangeWarning
    type: bool
    value: false
    state: present

- name: "[finder] Avoid creating .DS_Store files on network volumes"
  osx_defaults:
    domain: com.apple.desktopservices
    key: DSDontWriteNetworkStores
    type: bool
    value: true
    state: present

- name: "[finder] Avoid creating .DS_Store files on external USB drives"
  osx_defaults:
    domain: com.apple.desktopservices
    key: DSDontWriteUSBStores
    type: bool
    value: true
    state: present

- name: "[finder] Automatically open a new window when a volume is mounted 1/3"
  osx_defaults:
    domain: com.apple.frameworks.diskimages
    key: auto-open-ro-root
    type: bool
    value: true
    state: present

- name: "[finder] Automatically open a new window when a volume is mounted 2/3"
  osx_defaults:
    domain: com.apple.frameworks.diskimages
    key: auto-open-rw-root
    type: bool
    value: true
    state: present

- name: "[finder] Automatically open a new window when a volume is mounted 3/3"
  osx_defaults:
    domain: com.apple.finder
    key: OpenWindowForNewRemovableDisk
    type: bool
    value: true
    state: present

- name: "[finder] Enable snap-to-grid for icons on the desktop and in other icon views 1/2"
  command: /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist

- name: "[finder] Enable snap-to-grid for icons on the desktop and in other icon views 2/2"
  command: /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist

- name: "[finder] Set the size of icons on the desktop and in other icon views 1/2"
  command: /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:iconSize 64" ~/Library/Preferences/com.apple.finder.plist

- name: "[finder] Set the size of icons on the desktop and in other icon views 2/2"
  command: /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:iconSize 64" ~/Library/Preferences/com.apple.finder.plist

# Four-letter codes for the other view modes: `icnv`, `Nlsv`, `clmv`, `Flwv`
- name: "[finder] Use list view in all windows by default"
  osx_defaults:
    domain: com.apple.finder
    key: FXPreferredViewStyle
    type: string
    value: Nlsv
    state: present

- name: "[finder] Show the ~/Library folder"
  command: chflags nohidden ~/Library

# Unfortunately, Ansibles osx_defaults module is not yet able to handle lists or dicts
- name: "[finder] Expand the following File Info panes - 'General', 'Open with', and 'Sharing & Permissions'"
  command: defaults write com.apple.finder FXInfoPanesExpanded -dict General -bool true OpenWith -bool true Preview -bool false Privileges -bool true

- name: "[finder] Remove duplicates in the 'Open With' menu (also see `lscleanup` alias)"
  command: /System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user

#
# Dock
#

- name: "[dock] Remove unwanted dock icons"
  shell: dockutil --remove '{{ item }}'
  ignore_errors: true
  with_items: dockitems_to_remove
  vars:
    dockitems_to_remove:
      - Siri
      - Launchpad
      - Safari
      - Mail
      - Notizen       # Notes
      - Erinnerungen  # Reminders
      - Nachrichten   # Messages
      - FaceTime
      - iTunes
      - Bücher        # Books

- name: "[dock] Ensure wanted dock icons to be present"
  shell: dockutil --find '{{ item.name }}' || dockutil --add '{{ item.path }}'
  with_items: dockitems_to_persist
  vars:
    dockitems_to_persist:
      # Contacts
      - name: Kontakte
        pos: 1
      # Calendar
      - name: Kalender
        pos: 2
      - name: Firefox
        path: "/Applications/Firefox.app"
        pos: 3
      # Maps
      - name: Karten
        pos: 4
      # Photos
      - name: Fotos
        pos: 5
      - name: App Store
        pos: 6
      # System Preferences
      - name: Systemeinstellungen
        pos: 7

- name: "[dock] Order dock items"
  shell: dockutil --move '{{ item.name }}' --position {{ item.pos }}
  with_items: dockitems_to_persist

- name: "[dock] Set the icon size of Dock items"
  osx_defaults:
    domain: com.apple.dock
    key: tilesize
    type: int
    value: 30
    state: present

- name: "[dock] Speed up Mission Control animations"
  osx_defaults:
    domain: com.apple.dock
    key: expose-animation-duration
    type: float
    value: 0.15
    state: present

- name: "[dock] Automatically hide and show the Dock"
  osx_defaults:
    domain: com.apple.dock
    key: autohide
    type: bool
    value: true
    state: present

- name: "[dock] Make Dock icons of hidden applications translucent"
  osx_defaults:
    domain: com.apple.dock
    key: showhidden
    type: bool
    value: true
    state: present

- name: "[dock] Move Dock to the right side"
  osx_defaults:
    domain: com.apple.Dock
    key: orientation
    type: string
    value: right
    state: present

#
# TextEdit
#

- name: "[textedit] Use plain text mode for new documents"
  osx_defaults:
    domain: com.apple.TextEdit
    key: RichText
    type: int
    value: 0
    state: present

- name: "[textedit] Open and save files as UTF-8 1/2"
  osx_defaults:
    domain: com.apple.TextEdit
    key: PlainTextEncoding
    type: int
    value: 4
    state: present

- name: "[textedit] Open and save files as UTF-8 2/2"
  osx_defaults:
    domain: com.apple.TextEdit
    key: PlainTextEncodingForWrite
    type: int
    value: 4
    state: present

#
# Safari
#

- name: "[safari] Prevent from opening 'safe' files automatically after downloading"
  osx_defaults:
    domain: com.apple.Safari
    key: AutoOpenSafeDownloads
    type: bool
    value: false
    state: present

- name: "[safari] Enable debug menu"
  osx_defaults:
    domain: com.apple.Safari
    key: IncludeInternalDebugMenu
    type: bool
    value: true
    state: present

- name: "[safari] Enable the Develop menu and the Web Inspector 1/3"
  osx_defaults:
    domain: com.apple.Safari
    key: IncludeDevelopMenu
    type: bool
    value: true
    state: present

- name: "[safari] Enable the Develop menu and the Web Inspector 2/3"
  osx_defaults:
    domain: com.apple.Safari
    key: WebKitDeveloperExtrasEnabledPreferenceKey
    type: bool
    value: true
    state: present

- name: "[safari] Enable the Develop menu and the Web Inspector 3/3"
  osx_defaults:
    domain: com.apple.Safari
    key: com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled
    type: bool
    value: true
    state: present

- name: "[safari] Add a context menu item for showing the Web Inspector in web views"
  osx_defaults:
    domain: NSGlobalDomain
    key: WebKitDeveloperExtras
    type: bool
    value: true
    state: present

#
# Mail
#

- name: "[mail] Copy email addresses as `foo@example.com` instead of `Foo Bar <foo@example.com>`"
  osx_defaults:
    domain: com.apple.mail
    key: AddressesIncludeNameOnPasteboard
    type: bool
    value: false
    state: present

# Unfortunately, Ansibles osx_defaults module is not yet able to handle lists or dicts
- name: "[mail] Add the keyboard shortcut ⌘ + Enter to send an email"
  command: "defaults write com.apple.mail NSUserKeyEquivalents -dict-add 'Send' -string '@\\U21a9'"

# Unfortunately, Ansibles osx_defaults module is not yet able to handle lists or dicts
- name: "[mail] Display emails in threaded mode"
  command: defaults write com.apple.mail DraftsViewerAttributes -dict-add "DisplayInThreadedMode" -string "yes"

- name: "[mail] Disable inline attachments (just show the icons)"
  osx_defaults:
    domain: com.apple.mail
    key: DisableInlineAttachmentViewing
    type: bool
    value: true
    state: present

#
# ForkLift
#

- name: "[forklift] Set ForkLift as default over Finder 1/2"
  command: defaults write -g NSFileViewer -string com.binarynights.ForkLift-3

- name: "[forklift] Set ForkLift as default over Finder 2/2"
  osx_defaults:
    array_add: yes
    domain: com.apple.LaunchServices/com.apple.launchservices.secure
    key: LSHandlers
    type: array
    value:
      - '{LSHandlerContentType="public.folder";LSHandlerRoleAll="com.binarynights.ForkLift-3";}'
    state: present
